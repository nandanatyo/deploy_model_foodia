FROM python:3.8-slim

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    g++ \
    gfortran \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libatlas-base-dev \
    libblas-dev \
    liblapack-dev \
    python3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir wheel

RUN pip install --no-cache-dir numpy==1.19.5

RUN pip install --no-cache-dir scipy==1.6.3 && \
    pip install --no-cache-dir tensorflow-cpu==2.5.0 && \
    pip install --no-cache-dir keras==2.4.3

RUN pip install --no-cache-dir werkzeug==2.0.1 && \
    pip install --no-cache-dir flask==2.0.0 && \
    pip install --no-cache-dir flask-cors==3.0.10 && \
    pip install --no-cache-dir gunicorn==20.1.0

RUN pip install --no-cache-dir pandas==1.3.0 && \
    pip install --no-cache-dir scikit-learn==0.24.2 && \
    pip install --no-cache-dir matplotlib==3.4.3 && \
    pip install --no-cache-dir pillow==8.2.0

RUN pip install --no-cache-dir opencv-python==4.6.0.66 && \
    pip install --no-cache-dir imutils==0.5.4

RUN pip install --no-cache-dir nltk==3.6.3

RUN pip install --no-cache-dir protobuf==3.20.0 && \
    pip install --no-cache-dir paddlepaddle==2.4.2 && \
    pip install --no-cache-dir "paddleocr>=2.0.1,<2.7.0"

RUN python -c "import numpy; import tensorflow; import keras; print(f'NumPy: {numpy.__version__}, TF: {tensorflow.__version__}, Keras: {keras.__version__}')"

RUN mkdir -p predicted_results images templates

COPY bilstm_model2.h5 save_label_encoder2.pkl save_tokenizer2.pkl ./
COPY images/ images/
COPY templates/ templates/

COPY app.py img_to_txt_ocr.py model.py ./

EXPOSE 8080
ENV PORT=8080

ENV PYTHONWARNINGS="ignore::FutureWarning"

RUN echo 'import numpy as np; np.typeDict = {k: v for k, v in np._typeDict.items()} if hasattr(np, "_typeDict") else {}' > numpy_patch.py

CMD ["sh", "-c", "python -c 'import numpy; print(\"NumPy version:\", numpy.__version__)' && exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 app:app"]